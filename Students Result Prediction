import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

data = pd.read_excel("ML_dataset.xlsx")

def classify(row):
    if row['Grade 10'] < 40:
        return 'Negative'
    elif row['Attend %'] < 60:
        return 'Negative'
    elif row['MCS'] < 5:
        return 'Negative'
    elif row['Study Hours'] < 5:
        return 'Negative'
    elif sum([row['Test 1'] < 50, row['Test 2'] < 50, row['Test 3'] < 50]) >= 2:
        return 'Negative'
    else:
        return 'Positive'

data['Predicted_Result'] = data.apply(classify, axis=1)

features = ['Grade 10', 'Attend %', 'MCS', 'Study Hours', 'Test 1', 'Test 2', 'Test 3']
X = data[features]
y = data['Predicted_Result']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=50)

model = DecisionTreeClassifier(random_state=50)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred) * 100
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.2f}%")
print("Confusion Matrix:\n", conf_matrix)
print("Classification Report:\n", class_report)
